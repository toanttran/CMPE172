{"version":3,"sources":["Components/AddFlight.js","Components/makeContext.jsx","Components/Table.js","Components/analytic.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","textField","marginLeft","marginRight","AddFlight","classes","React","useState","firstLoad","setLoad","airline","setAirlineName","flightNumber","setFlightNumber","gate","setGate","destination","setDestination","departureTime","setDepartureTime","arrivalTime","setArrivalTime","status","setStatus","message","setMessage","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","Grid","container","item","xs","TextField","required","fullWidth","id","value","label","name","autoComplete","onChange","event","target","console","log","Button","color","preventdefault","onClick","variables","toInput","a","async","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","sampleFunc","justify","to","style","someContexts","createContext","table","minWidth","justifyContent","height","link","textDecoration","alignSelf","root","SimpleTable","context","useContext","data","upDateData","dataNum","setDataNum","setAirline","desti","searchArr","setArr","data1","data2","data3","dataSearch","setChange","isLoading","history","useHistory","numArr","hourArr","i","length","count","map","x","depart","slice","push","setNumber","displayData","today","Date","toLocaleDateString","temp","CircularProgress","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","key","Analytic","series","numberFlight","options","chart","type","zoom","enabled","dataLabels","stroke","curve","title","text","grid","colors","opacity","yaxis","rotate","offsetX","offsetY","undefined","fontSize","fontFamily","fontWeight","cssClass","xaxis","categories","App","Provider","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2902d834.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(7),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function AddFlight() {\r\n  const classes = useStyles();\r\n  const [firstLoad, setLoad] = React.useState(true);\r\n\r\n  const [airline, setAirlineName] = React.useState(\"\");\r\n  const [flightNumber, setFlightNumber] = React.useState(\"\");\r\n  const [gate, setGate] = React.useState(\"\");\r\n  const [destination, setDestination] = React.useState(\"\");\r\n  const [departureTime, setDepartureTime] = React.useState(\"\");\r\n  const [arrivalTime, setArrivalTime] = React.useState(\"\");\r\n  const [status, setStatus] = React.useState(\"\");\r\n\r\n  const handleAirlineChange = (event) => {\r\n    setAirlineName(event.target.value);\r\n    console.log(\"check date: \", event.target.value);\r\n  };\r\n  const handleFlightNumberChange = (event) =>\r\n    setFlightNumber(event.target.value);\r\n  const handleGateChange = (event) => setGate(event.target.value);\r\n  const handleDestinationChange = (event) => setDestination(event.target.value);\r\n  const handleDepartureTimeChange = (event) =>\r\n    setDepartureTime(event.target.value);\r\n  const handleArrivalTimeChange = (event) => setArrivalTime(event.target.value);\r\n  const handleStatusChange = (event) => setStatus(event.target.value);\r\n\r\n  const [message, setMessage] = React.useState(\"Nothing saved in the session\");\r\n\r\n  async function sampleFunc(toInput) {\r\n    const response = await fetch(\"/api/flight\", {\r\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n      mode: \"cors\", // no-cors, *cors, same-origin\r\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n      credentials: \"same-origin\", // include, *same-origin, omit\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      redirect: \"follow\", // manual, *follow, error\r\n      referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n      body: JSON.stringify(toInput), // body data type must match \"Content-Type\" header\r\n    });\r\n    let body = await response.json();\r\n    console.log(body.id);\r\n    setMessage(body.id ? \"Data sucessfully updated\" : \"Data failed to update\");\r\n  }\r\n\r\n  const handleSubmit = (variables) => {\r\n    const toInput = {\r\n      airline,\r\n      flightNumber,\r\n      gate,\r\n      destination,\r\n      departureTime,\r\n      arrivalTime,\r\n      status,\r\n    };\r\n    sampleFunc(toInput);\r\n    setAirlineName(\"\");\r\n    setFlightNumber(\"\");\r\n    setGate(\"\");\r\n    setDestination(\"\");\r\n    setDepartureTime(\"\");\r\n    setArrivalTime(\"\");\r\n    setStatus(\"\");\r\n  };\r\n\r\n  if (firstLoad) {\r\n    // sampleFunc();\r\n    setLoad(false);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <GroupIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Modify Flight Data\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"airline\"\r\n                value={airline}\r\n                label=\"Airline\"\r\n                name=\"airline\"\r\n                autoComplete=\"airline\"\r\n                onChange={handleAirlineChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"flightNumber\"\r\n                name=\"flightNumber\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                value={flightNumber}\r\n                id=\"flightNumber\"\r\n                label=\"Flight Number\"\r\n                onChange={handleFlightNumberChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"destination\"\r\n                value={destination}\r\n                label=\"Destination\"\r\n                name=\"destination\"\r\n                autoComplete=\"destination\"\r\n                onChange={handleDestinationChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"gate\"\r\n                value={gate}\r\n                label=\"Gate\"\r\n                name=\"gate\"\r\n                autoComplete=\"gate\"\r\n                onChange={handleGateChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"departureTime\"\r\n                value={departureTime}\r\n                label=\"Departure Time\"\r\n                name=\"departureTime\"\r\n                autoComplete=\"departureTime\"\r\n                onChange={handleDepartureTimeChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"arrivalTime\"\r\n                value={arrivalTime}\r\n                label=\"Arrival Time\"\r\n                name=\"arrivalTime\"\r\n                autoComplete=\"arrivalTime\"\r\n                onChange={handleArrivalTimeChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"status\"\r\n                value={status}\r\n                label=\"Status\"\r\n                name=\"status\"\r\n                autoComplete=\"status\"\r\n                onChange={handleStatusChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            //type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            preventdefault=\"true\"\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Link to=\"/\">View Flight Data</Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Typography style={{ margin: 7 }} variant=\"body1\">\r\n          Status: {message}\r\n        </Typography>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import { createContext } from \"react\";\n\nconst someContexts = createContext();\n\nexport default someContexts;\n","import React,{ useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n// import { Link } from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FlightIcon from \"@material-ui/icons/Flight\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport someContexts from \"./makeContext\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 600,\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: `10px`,\r\n    height: \"100%\",\r\n    width: \"99%\",\r\n    marginTop: theme.spacing(7),\r\n  },\r\n  link: {\r\n    color: \"rgba(0,0,0,0.65)\",\r\n    textDecoration: \"none\",\r\n    marginLeft: \"10%\",\r\n    alignSelf: \"flex-start\",\r\n    \"&:hover\": {\r\n      color: \"rgba(0,0,0,1)\",\r\n    },\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SimpleTable() {\r\n  const classes = useStyles();\r\n  const context = useContext(someContexts);\r\n  const [data, upDateData] = React.useState([]);\r\n  const [firstLoad, setLoad] = React.useState(true);\r\n\r\n  const [dataNum, setDataNum] = React.useState(\"\");\r\n  const [airline, setAirline] = React.useState(\"\");\r\n  const [desti, setDestination] = React.useState(\"\");\r\n  const [searchArr, setArr] = React.useState([]);\r\n  const [dataSearch, setChange] = React.useState({\r\n    data1: \"\",\r\n    data2: \"\",\r\n    data3: \"\",\r\n  });\r\n  let isLoading = true;\r\n  let history = useHistory();\r\n  const goAdd = () => history.push(\"/addFlight\");\r\n  const goAnalytic = () => history.push(\"/analytic\");\r\n\r\n  async function sampleFunc() {\r\n    let response = await fetch(\"/api/flight\");\r\n    let body = await response.json();\r\n    upDateData(body);\r\n    console.log(body);\r\n    let numArr=[];\r\n    let hourArr=[\"00\",\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\"]\r\n\r\n    for(var i =0;i<hourArr.length;i++){\r\n      var count=0;\r\n      body.map((x)=>{\r\n        let depart=x.departureTime;\r\n        // console.log(depart.slice(0,2));\r\n        // if(depart.slice(0,1)===\"0\"){\r\n        //   depart=depart.slice(1,2);\r\n        // }else{\r\n        //   depart=depart.slice(0,2);\r\n        // }\r\n        if(hourArr[i]===(depart.slice(0,2))){\r\n          count+=1;\r\n        }\r\n      })\r\n      numArr.push(count);\r\n    }\r\n    console.log(numArr);\r\n    context.setNumber(numArr);\r\n  }\r\n\r\n  //todo: this 3 functions get data from search boxes\r\n  const searchFlightNumber = (event) => setDataNum(event.target.value);\r\n  const searchDestination = (event) => setDestination(event.target.value);\r\n  const searchAirline = (event) => setAirline(event.target.value);\r\n\r\n  //todo this function run when people click search\r\n  function searchClick() {\r\n    let temp = [];\r\n    if (dataNum !== \"\" && airline !== \"\" && desti !== \"\") {\r\n      data.map((x) => {\r\n        if (\r\n          x.flightNumber === dataNum &&\r\n          x.airline === airline &&\r\n          x.destination === desti\r\n        ) {\r\n          temp.push(x);\r\n          console.log(x);\r\n        }\r\n      });\r\n    } else if (dataNum !== \"\" && airline !== \"\") {\r\n      data.map((x) => {\r\n        if (x.flightNumber === dataNum && x.airline === airline) {\r\n          temp.push(x);\r\n          console.log(x);\r\n        }\r\n      });\r\n    } else if (airline !== \"\" && desti !== \"\") {\r\n      console.log(\"Got here\");\r\n      data.map((x) => {\r\n        if (x.airline === airline && x.destination === desti) {\r\n          temp.push(x);\r\n          console.log(x);\r\n        }\r\n      });\r\n    } else if (dataNum !== \"\" && desti !== \"\") {\r\n      data.map((x) => {\r\n        if (x.flightNumber === dataNum && x.destination === desti) {\r\n          temp.push(x);\r\n          console.log(x);\r\n        }\r\n      });\r\n    } else if (dataNum !== \"\") {\r\n      console.log(\"check in dataNum \");\r\n      data.map((x) => {\r\n        if (x.flightNumber === dataNum) {\r\n          temp.push(x);\r\n          console.log(x);\r\n        }\r\n        console.log(\"temp: \", temp);\r\n      });\r\n    } else if (airline !== \"\") {\r\n      data.map((x) => {\r\n        if (x.airline === airline) {\r\n          temp.push(x);\r\n          console.log(x);\r\n        }\r\n      });\r\n    } else if (desti !== \"\") {\r\n      data.map((x) => {\r\n        if (x.destination === desti) {\r\n          temp.push(x);\r\n          console.log(x);\r\n        }\r\n      });\r\n    }\r\n\r\n    console.log(temp);\r\n    setArr(temp);\r\n    setChange({\r\n      data1: dataNum,\r\n      data2: airline,\r\n      data3: desti,\r\n    });\r\n  }\r\n\r\n  function reset() {\r\n    setChange({\r\n      data1: \"\",\r\n      data2: \"\",\r\n      data3: \"\",\r\n    });\r\n    setArr([]);\r\n  }\r\n\r\n  if (firstLoad) {\r\n    sampleFunc();\r\n    setLoad(false);\r\n  }\r\n\r\n  //todo: let we have an alternate data to display when people search or not\r\n  let displayData = data;\r\n  if (\r\n    (dataSearch.data1 !== \"\" ||\r\n      dataSearch.data2 !== \"\" ||\r\n      dataSearch.data3 !== \"\") &&\r\n    searchArr.length === 0\r\n  ) {\r\n    console.log(\"search but nothing match\");\r\n    displayData = [];\r\n  } else if (\r\n    (dataSearch.data1 !== \"\" ||\r\n      dataSearch.data2 !== \"\" ||\r\n      dataSearch.data3 !== \"\") &&\r\n    searchArr.length !== 0\r\n  ) {\r\n    console.log(\"search and something matches\");\r\n    console.log(searchArr);\r\n    displayData = searchArr;\r\n  }\r\n\r\n  if (displayData.length > 0) isLoading = false;\r\n  let today = new Date().toLocaleDateString();\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n      <div className=\"buttonBar\">\r\n        <div className=\"inlineBlock\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className=\"\"\r\n            onClick={goAdd}\r\n          >\r\n            Add Flight\r\n          </Button>\r\n        </div>\r\n        <div className=\"inlineBlock makeSpace\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className=\"\"\r\n            onClick={goAnalytic}\r\n          >\r\n            Analytics\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Link className={classes.link} to=\"/addFlight\">\r\n        {\" \"}\r\n        <Typography align=\"right\"> Modify Data</Typography>{\" \"}\r\n      </Link> */}\r\n      <Avatar className={classes.avatar}>\r\n        <FlightIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        SFO Flight Schedule on {today}\r\n      </Typography>\r\n\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Flight number\"\r\n          variant=\"outlined\"\r\n          onChange={searchFlightNumber}\r\n        />\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Destination\"\r\n          variant=\"outlined\"\r\n          onChange={searchDestination}\r\n        />\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Airline\"\r\n          variant=\"outlined\"\r\n          onChange={searchAirline}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"searchBtn\"\r\n          onClick={searchClick}\r\n        >\r\n          Search\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"searchBtn\"\r\n          onClick={reset}\r\n        >\r\n          Reset\r\n        </Button>\r\n      </form>\r\n      {isLoading ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <TableContainer\r\n          style={{ width: \"80%\", margin: \"60px 10px\" }}\r\n          component={Paper}\r\n        >\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Airline</TableCell>\r\n                <TableCell align=\"center\">Flight Number</TableCell>\r\n                <TableCell align=\"center\">Destination</TableCell>\r\n                <TableCell align=\"center\">Gate</TableCell>\r\n                <TableCell align=\"center\">Departure Time</TableCell>\r\n                <TableCell align=\"center\">Arrival Time</TableCell>\r\n                <TableCell align=\"center\">Status</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {displayData?.map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell align=\"center\">{row.airline}</TableCell>\r\n                  <TableCell align=\"center\">{row.flightNumber}</TableCell>\r\n                  <TableCell align=\"center\">{row.destination}</TableCell>\r\n                  <TableCell align=\"center\">{row.gate}</TableCell>\r\n                  <TableCell align=\"center\">{row.departureTime}</TableCell>\r\n                  <TableCell align=\"center\">{row.arrivalTime}</TableCell>\r\n                  <TableCell align=\"center\">{row.status}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\n// import Chart from 'react-apexcharts'\nimport ReactApexChart from \"react-apexcharts\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport someContexts from \"./makeContext\";\n\nexport default function Analytic() {\n  const context = useContext(someContexts);\n  let history = useHistory();\n  const goAdd = () => history.push(\"/addFlight\");\n  const goAnalytic = () => history.push(\"/analytic\");\n  const goData = () => history.push(\"/\");\n  const series = [\n    {\n      name: \"Numbers of Flights\",\n      data: context.numberFlight,\n    },\n  ];\n\n  const options = {\n    chart: {\n      height: 350,\n      type: \"line\",\n      zoom: {\n        enabled: false,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: \"straight\",\n    },\n    title: {\n      text: \"Peak time of Departure\",\n      align: \"left\",\n    },\n    grid: {\n      row: {\n        colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\n        opacity: 0.5,\n      },\n    },\n    yaxis: [\n      {\n        title: {\n          text: \"Number of Flights\",\n          rotate: -90,\n          offsetX: 0,\n          offsetY: 0,\n          style: {\n            color: undefined,\n            fontSize: \"15px\",\n            fontFamily: \"Helvetica, Arial, sans-serif\",\n            fontWeight: 600,\n            cssClass: \"apexcharts-yaxis-title\",\n          },\n        },\n      },\n    ],\n    xaxis: {\n      categories: [\n        \"0\",\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\",\n        \"5\",\n        \"6\",\n        \"7\",\"8\",\n        \"9\",\n        \"10\",\n        \"11\",\n        \"12\",\n        \"13\",\n        \"14\",\n        \"15\",\n        \"16\",\n        \"17\",\n        \"18\",\n        \"19\",\n        \"20\",\n        \"21\",\n        \"22\",\n        \"23\",\n      ],\n    },\n  };\n\n  return (\n    <div>\n      <div className=\"buttonBar makespaceButtom makespacetop\">\n        <div className=\"inlineBlock\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className=\"\"\n            onClick={goAdd}\n          >\n            Add Flight\n          </Button>\n        </div>\n        <div className=\"inlineBlock makeSpace\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className=\"\"\n            onClick={goAnalytic}\n          >\n            Analytics\n          </Button>\n        </div>\n        <div className=\"inlineBlock makeSpace\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className=\"\"\n            onClick={goData}\n          >\n            All Flights\n          </Button>\n        </div>\n      </div>\n      <ReactApexChart\n        options={options}\n        series={series}\n        type=\"line\"\n        height={350}\n      />\n    </div>\n  );\n}\n\n// export default Analytic;\n","import React,{useState} from \"react\";\nimport AddFlight from \"./Components/AddFlight\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Table from \"./Components/Table\";\nimport Analytic from \"./Components/analytic\";\nimport someContexts from \"./Components/makeContext\";\n\nfunction App() {\n  const [numberFlight,setNumber]=useState([]);\n  return (\n    <Router>\n      <someContexts.Provider value={{numberFlight,setNumber}}>\n        <Route exact path=\"/\" component={Table} />\n        <Route path=\"/addFlight\" component={AddFlight} />\n        <Route path=\"/analytic\" component={Analytic} />\n      </someContexts.Provider>\n     </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}